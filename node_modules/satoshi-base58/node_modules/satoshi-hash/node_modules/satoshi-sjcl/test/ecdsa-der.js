describe('ecdsa DER codec', function () {
  describe('vectors', function () {
    var keyPair = new sjcl.ecc.ecdsa.generateKeys(sjcl.ecc.curves.k256);

    it('Test Case 1', function () {
      var sig = bytes.toBits([147,75,30,161,10,75,60,23,87,226,176,192,23,208,182,20,60,227,201,167,230,164,164,152,96,215,166,171,33,14,227,216,36,66,206,157,43,145,96,100,16,128,20,120,62,146,62,195,107,73,116,62,47,250,28,68,150,240,26,81,42,175,217,229]);
      var encDER = keyPair.sec.encodeDER(sig);

      expect(bits.toBytes(encDER)).to.eql([48, 70, 2, 33, 0, 147, 75, 30, 161, 10, 75, 60, 23, 87, 226, 176, 192, 23, 208, 182, 20, 60, 227, 201, 167, 230, 164, 164, 152, 96, 215, 166, 171, 33, 14, 227, 216, 2, 33, 0, 36, 66, 206, 157, 43, 145, 96, 100, 16, 128, 20, 120, 62, 146, 62, 195, 107, 73, 116, 62, 47, 250, 28, 68, 150, 240, 26, 81, 42, 175, 217, 229]);
      expect(keyPair.pub.decodeDER(encDER)).to.eql(sig);
    });

    it('Test Case 2', function () {
      var sig = bytes.toBits([112,99,174,131,231,246,43,187,23,23,152,19,27,74,5,100,185,86,147,0,146,179,59,7,179,149,97,93,158,199,225,92,88,223,204,30,0,163,94,21,114,243,102,255,227,75,160,252,71,219,30,113,137,117,155,159,178,51,197,176,90,179,136,234]);
      var encDER = keyPair.sec.encodeDER(sig);

      expect(bits.toBytes(encDER)).to.eql([48, 70, 2, 33, 0, 112, 99, 174, 131, 231, 246, 43, 187, 23, 23, 152, 19, 27, 74, 5, 100, 185, 86, 147, 0, 146, 179, 59, 7, 179, 149, 97, 93, 158, 199, 225, 92, 2, 33, 0, 88, 223, 204, 30, 0, 163, 94, 21, 114, 243, 102, 255, 227, 75, 160, 252, 71, 219, 30, 113, 137, 117, 155, 159, 178, 51, 197, 176, 90, 179, 136, 234]);
      expect(keyPair.pub.decodeDER(encDER)).to.eql(sig);
    });

    it('Test Case 3', function () {
      var sig = bytes.toBits([0, 173, 225, 166, 163, 218, 234, 120, 43, 76, 129, 174, 130, 220, 80, 236, 165, 95, 218, 118, 178, 106, 162, 20, 23, 177, 19, 31, 196, 107, 144, 254, 19, 230, 95, 223, 107, 207, 103, 132, 30, 186, 125, 1, 244, 215, 85, 48, 94, 3, 23, 86, 158, 49, 63, 6, 175, 39, 200, 178, 124, 227, 181, 151]);
      var encDER = keyPair.sec.encodeDER(sig);

      expect(bits.toBytes(encDER)).to.eql([48, 69, 2, 32, 0, 173, 225, 166, 163, 218, 234, 120, 43, 76, 129, 174, 130, 220, 80, 236, 165, 95, 218, 118, 178, 106, 162, 20, 23, 177, 19, 31, 196, 107, 144, 254, 2, 33, 0, 19, 230, 95, 223, 107, 207, 103, 132, 30, 186, 125, 1, 244, 215, 85, 48, 94, 3, 23, 86, 158, 49, 63, 6, 175, 39, 200, 178, 124, 227, 181, 151]);
      expect(keyPair.pub.decodeDER(encDER)).to.eql(sig);
    });

    it('Test Case 4', function () {
      var sig = bytes.toBits([16, 51, 95, 123, 31, 102, 178, 7, 113, 189, 46, 204, 154, 24, 193, 37, 194, 167, 247, 113, 91, 127, 107, 152, 246, 219, 74, 117, 76, 93, 80, 185, 113, 165, 109, 21, 204, 247, 245, 56, 161, 122, 245, 154, 119, 162, 107, 34, 240, 158, 27, 28, 39, 169, 67, 129, 222, 227, 111, 206, 163, 66, 151, 225]);
      var encDER = keyPair.sec.encodeDER(sig);

      expect(bits.toBytes(encDER)).to.eql([48, 70, 2, 33, 0, 16, 51, 95, 123, 31, 102, 178, 7, 113, 189, 46, 204, 154, 24, 193, 37, 194, 167, 247, 113, 91, 127, 107, 152, 246, 219, 74, 117, 76, 93, 80, 185, 2, 33, 0, 113, 165, 109, 21, 204, 247, 245, 56, 161, 122, 245, 154, 119, 162, 107, 34, 240, 158, 27, 28, 39, 169, 67, 129, 222, 227, 111, 206, 163, 66, 151, 225]);
      expect(keyPair.pub.decodeDER(encDER)).to.eql(sig);
    });

    it('Test Case 5', function () {
      var sig = bytes.toBits([0, 157, 116, 72, 231, 202, 69, 53, 246, 195, 80, 124, 199, 35, 86, 241, 210, 93, 159, 20, 231, 130, 149, 22, 138, 47, 25, 74, 173, 158, 169, 190, 157, 150, 76, 203, 65, 141, 44, 242, 214, 119, 91, 239, 116, 104, 150, 177, 40, 112, 10, 184, 147, 170, 65, 146, 127, 218, 71, 217, 178, 14, 28, 4]);
      var encDER = keyPair.sec.encodeDER(sig);

      expect(bits.toBytes(encDER)).to.eql([48, 69, 2, 32, 0, 157, 116, 72, 231, 202, 69, 53, 246, 195, 80, 124, 199, 35, 86, 241, 210, 93, 159, 20, 231, 130, 149, 22, 138, 47, 25, 74, 173, 158, 169, 190, 2, 33, 0, 157, 150, 76, 203, 65, 141, 44, 242, 214, 119, 91, 239, 116, 104, 150, 177, 40, 112, 10, 184, 147, 170, 65, 146, 127, 218, 71, 217, 178, 14, 28, 4]);
      expect(keyPair.pub.decodeDER(encDER)).to.eql(sig);
    });
  });
});
